version: '3.8'

services:
  # Strapi CMS Backend
  strapi:
    build:
      context: .
      dockerfile: apps/strapi/Dockerfile
      args:
        APP: strapi
        WORKSPACE: '@repo/strapi'
    restart: unless-stopped
    env_file: .env # ðŸŽ¯ Automatically loads ALL environment variables
    environment:
      # Override specific values for production
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_SSL: true
      DATABASE_SSL_REJECT_UNAUTHORIZED: false
    volumes:
      - strapi_uploads:/app/apps/strapi/public/uploads
    networks:
      - app_network
    labels:
      - 'traefik.enable=false'

  # Next.js Frontend
  ui:
    build:
      context: .
      dockerfile: apps/ui/Dockerfile
      args:
        APP: ui
        WORKSPACE: '@repo/ui'
    restart: unless-stopped
    env_file: .env # ðŸŽ¯ Automatically loads ALL environment variables
    environment:
      # Override specific values for production
      NODE_ENV: production
    networks:
      - app_network
    depends_on:
      - strapi
    labels:
      - 'traefik.enable=false'

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - app_network
    depends_on:
      - strapi
      - ui

  # Watchtower for automatic updates (optional)
  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_POLL_INTERVAL: 3600 # Check every hour
      WATCHTOWER_INCLUDE_STOPPED: true
    command: --interval 3600 --cleanup
    networks:
      - app_network

volumes:
  strapi_uploads:
  nginx_cache:

networks:
  app_network:
    driver: bridge
