version: '3.8'

services:
  # Strapi CMS Backend - Internal network only
  strapi:
    build:
      context: .
      dockerfile: apps/strapi/Dockerfile
      args:
        APP: strapi
        WORKSPACE: '@repo/strapi'
        BUILDKIT_INLINE_CACHE: 1
      cache_from:
        - cabernai-web-strapi:latest
      target: runner
    image: cabernai-web-strapi:latest
    restart: unless-stopped
    env_file: .env # ðŸŽ¯ Automatically loads ALL environment variables
    environment:
      # Override specific values for production
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_SSL: true
      DATABASE_SSL_REJECT_UNAUTHORIZED: false
    ports:
      - '127.0.0.1:1337:1337' # Only bind to localhost
    volumes:
      - strapi_uploads:/app/apps/strapi/public/uploads
    networks:
      - cabernai_network
      - default # Connect to default network for external nginx access
    labels:
      - 'traefik.enable=false'
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:1337/admin',
          '||',
          'exit',
          '1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Frontend - Internal network only
  ui:
    build:
      context: .
      dockerfile: apps/ui/Dockerfile
      args:
        APP: ui
        WORKSPACE: '@repo/ui'
        BUILDKIT_INLINE_CACHE: 1
      cache_from:
        - cabernai-web-ui:latest
      target: runner
    image: cabernai-web-ui:latest
    restart: unless-stopped
    env_file: .env # ðŸŽ¯ Automatically loads ALL environment variables
    environment:
      # Override specific values for production
      NODE_ENV: production
    ports:
      - '127.0.0.1:3000:3000' # Only bind to localhost
    networks:
      - cabernai_network
      - default # Connect to default network for external nginx access
    depends_on:
      strapi:
        condition: service_healthy
    labels:
      - 'traefik.enable=false'
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3000',
          '||',
          'exit',
          '1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Watchtower for automatic updates (optional)
  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_POLL_INTERVAL: 3600
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_REVIVE_STOPPED: false
      WATCHTOWER_NO_STARTUP_MESSAGE: true
    command: --interval 3600 --cleanup --scope cabernai-web
    networks:
      - cabernai_network
    labels:
      - 'com.centurylinklabs.watchtower.scope=cabernai-web'

volumes:
  strapi_uploads:
    name: cabernai_strapi_uploads

networks:
  cabernai_network:
    name: cabernai_network
    driver: bridge
